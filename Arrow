Arrow Functions
As arrow functions são uma forma concisa de escrever funções em JavaScript, introduzidas no ES6 (ECMAScript 2015). Elas oferecem uma sintaxe mais compacta em comparação com as funções tradicionais, além de terem um comportamento especial em relação ao escopo do this.
Descrição:
As arrow functions são definidas usando a sintaxe () => {}, onde os parênteses envolvem os parâmetros da função e a seta => indica que o corpo da função segue. Quando a função possui apenas uma expressão, o corpo não precisa de chaves nem do operador return, pois a expressão é automaticamente retornada.
// Função tradicional
function soma(a, b) {
  return a + b;
}
// Arrow function equivalente
const somaArrow = (a, b) => a + b;
console.log(soma(2, 3));         // Saída: 5
console.log(somaArrow(2, 3));    // Saída: 5
Escopo do this:
Um aspecto importante das arrow functions é que elas herdam o valor do this do contexto circundante. Isso é diferente das funções tradicionais, que têm seu próprio valor de this.
Exemplo de Escopo do this:
// Uso de função tradicional
const objetoTrad = {
  nome: "Objeto Tradicional",
  mostrarNome: function() {
    console.log(this.nome);
  }
};

// Uso de arrow function
const objetoArrow = {
  nome: "Objeto Arrow",
  mostrarNome: () => {
    console.log(this.nome); // O 'this' aqui se refere ao escopo global, não ao objetoArrow
  }
};

objetoTrad.mostrarNome();   // Saída: "Objeto Tradicional"
objetoArrow.mostrarNome();  // Saída: undefined (pois o 'this' não está apontando para o objetoArrow)
